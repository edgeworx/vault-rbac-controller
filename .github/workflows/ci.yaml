name: CI
on:
  push:
    branches: [main]

jobs:

  unit-tests:

    name: Unit Tests
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot'
    steps:

    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup Go 1.19
      uses: actions/setup-go@v2
      with:
        go-version: '^1.19'

    - name: Cache Go Modules
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go

    - name: Download Go Modules
      shell: bash
      run: go mod download -x

    - name: Run Static Analysis
      shell: bash
      run: make lint

    - name: Run Unit Tests
      shell: bash
      run: make test

  build:

    name: Build and Publish
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot'
    needs: unit-tests
    steps:

    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup Go 1.19
      uses: actions/setup-go@v2
      with:
        go-version: '^1.19'

    - name: Cache Go Modules
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go

    - name: Download Go Modules
      shell: bash
      run: go mod download -x

    # - name: Setup QEMU
    #   uses: docker/setup-qemu-action@v2

    - name: Build Release Binaries
      shell: bash
      run: make dist

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    -  name: Build and push
       uses: docker/build-push-action@v3
       with:
         push: true
         tags: ghcr.io/tinyzimmer/vault-rbac-controller:latest
         platforms: linux/amd64,linux/arm64
         github-token: ${{ secrets.GITHUB_TOKEN }}