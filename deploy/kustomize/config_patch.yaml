---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
spec:
  template:
    metadata:
      annotations:
        # Make sure this matches the auth role in Vault
        vault.hashicorp.com/role: vault-rbac-controller
        # Add additional injector configurations here
        ## See the documentation for all the available configurations of the injector:
        ## https://developer.hashicorp.com/vault/docs/platform/k8s/injector/annotations
        ## Example if Vault is using a custom certificate
        # vault.hashicorp.com/tls-secret: vault-tls-ca
        # vault.hashicorp.com/ca-cert: /vault/tls/ca.crt
    spec:
      # Change arguments to the controller
      containers:
      - name: controller
        args: 
        - --leader-elect
        ## Place finalizers on resources to attempt Vault cleanup on deletion
        - --use-finalizers
        ## Specify a custom mount for the Kubernetes auth method
        - --auth-mount=kubernetes
        ## Only watch the given namespaces
        # - --namespace=default,example
        ## Exclude the given namespaces
        # - --exclude-namespaces=default,example
        ## Include system namespaces (default behavior is to ignore regardless of above)
        # - --include-system-namespaces
        ## Set your desired resource limits
        # resources:
        #   requests:
        #     cpu: 100m
        #     memory: 64Mi
        #   limits:
        #     cpu: 200m
        #     memory: 128Mi
        ## If you choose to not use the injected agent cache, configure the Vault client via 
        ## environment variables and disable the cache in the annotations
        # env:
        # - name: VAULT_ADDR
        #   value: https://vault.example.com
        # - name: VAULT_TOKEN
        #   valueFrom:
        #     secretKeyRef:
        #       name: vault-credentials
        #       key: vault-token
        
